from ultralytics import YOLO
import cv2
import math
 
# Starts webcam with default camera
cap = cv2.VideoCapture(0)
cap.set(3, 640) # width
cap.set(4, 480) # length

# The fine-tuned YOLO model
model = YOLO("Colab-Weights\\best.pt")
# model = YOLO("yolov8n.pt")

# Object classes
classNames = ["Person", "Automobile", "Obstacle", "Road", "Sidewalk"]

# Confidence threshold
CONF = 0.8

# Main loop that processes frames until told to quit
while True:
    success, img = cap.read() # Reads single frame
    results = model(img, stream=True) # Results of model's segmentation

    # Coordinates
    for r in results:
        
        # Extracts bounding boxes
        boxes = r.boxes 

        for box in boxes:
            
            # Confidence score
            confidence = math.ceil((box.conf[0]*100))/100 
            
            if confidence >= CONF:
                # Bounding box
                x1, y1, x2, y2 = box.xyxy[0]
                x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2)

                # Draws bounding box on frame
                cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)
                
                # Class name of detected object
                cls = int(box.cls[0])
                print("Class name -->", classNames[cls])
                print("Confidence --->",confidence)

                # Object details
                org = [x1, y1]
                font = cv2.FONT_HERSHEY_SIMPLEX
                fontScale = 1
                color = (255, 0, 0)
                thickness = 2

                cv2.putText(img, classNames[cls], org, font, fontScale, color, thickness)

    # Displays frame in window
    cv2.imshow("Webcam", img)
    
    # Exit's while loop on "q"
    if cv2.waitKey(1) == ord("q"):
        break

cap.release()
cv2.destroyAllWindows()